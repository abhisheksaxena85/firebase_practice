import 'dart:developer';import 'package:firebase_auth/firebase_auth.dart';import 'package:flutter/material.dart';class UserPage extends StatefulWidget {  final String verificationID;  const UserPage({super.key, required this.verificationID});  @override  State<UserPage> createState() => _UserPageState();}class _UserPageState extends State<UserPage> {  TextEditingController otpController = TextEditingController();  bool flag = false;  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(        title: const Text('User Page'),      ),      body: Column(        mainAxisAlignment: MainAxisAlignment.center,        crossAxisAlignment: CrossAxisAlignment.center,        children: [          //otp          TextField(            controller: otpController,            decoration: const InputDecoration(              enabledBorder: OutlineInputBorder(                  borderSide: BorderSide(                    color: Colors.white,                    width: 0.5,                  )              ),              focusedBorder: OutlineInputBorder(                  borderSide: BorderSide(                    color: Colors.white,                    width: 1.5,                  )              ),              hintText: "OTP",              hintStyle: TextStyle(color: Colors.black),            ),            cursorColor: Colors.black,            style:const TextStyle(color: Colors.black),          ),          flag?const Center(child: CircularProgressIndicator(color: Colors.black,)):ElevatedButton(onPressed: (){            String otp = otpController.text.toString().trim();            otpVerification(otp,widget.verificationID);            }, child: const Text("Verify OTP",style: TextStyle(color: Colors.black),)          )        ],      ),    );  }  void otpVerification(String otp, String verificationID)async{    PhoneAuthCredential credential = PhoneAuthProvider.credential(verificationId: verificationID, smsCode: otp);    try{      UserCredential Usercredential = await FirebaseAuth.instance.signInWithCredential(credential);      if(Usercredential!=null){        ScaffoldMessenger.of(context).showSnackBar(          const SnackBar(content: Text('User Login Successful'))        );        // log('Credential ${Usercredential.user.}');      }else{        ScaffoldMessenger.of(context).showSnackBar(            const SnackBar(content: Text('User Login failed'))        );      }    }catch(e){      log(e.toString());    }  }}