import 'dart:developer';import 'package:cloud_firestore/cloud_firestore.dart';import 'package:firebase_auth/firebase_auth.dart';import 'package:firebase_practice/user_page.dart';import 'package:flutter/material.dart';class HomePage extends StatefulWidget {  @override  State<HomePage> createState() => HomePageState();}class HomePageState extends State<HomePage> {  TextEditingController emailController = TextEditingController();  TextEditingController nameController = TextEditingController();  TextEditingController ageController = TextEditingController();  FirebaseFirestore firebase = FirebaseFirestore.instance;  late String ID;  bool isSendOtpClicked = false;  @override  void initState(){    super.initState();  }  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(        title: const Text('Firebase Practice Project'),        centerTitle: true,        backgroundColor: Colors.blue,      ),      body: Container(          color: Colors.blue,          width: double.infinity,          height: double.infinity,          padding: const EdgeInsets.symmetric(horizontal: 10, vertical: 20),          alignment: Alignment.center,          child: SingleChildScrollView(            scrollDirection: Axis.vertical,            primary: true,            child: Column(              mainAxisAlignment: MainAxisAlignment.center,              crossAxisAlignment: CrossAxisAlignment.center,              children: [                //Name                TextField(                  controller: nameController,                  decoration: const InputDecoration(                    enabledBorder: OutlineInputBorder(                        borderSide: BorderSide(                          color: Colors.white,                          width: 0.5,                        )                    ),                    focusedBorder: OutlineInputBorder(                        borderSide: BorderSide(                          color: Colors.white,                          width: 1.5,                        )                    ),                    hintText: "Name",                    hintStyle: TextStyle(color: Colors.white),                  ),                  cursorColor: Colors.white,                  style:const TextStyle(color: Colors.white),                ),                const SizedBox(height: 30,),                //Email                TextField(                  controller: emailController,                  decoration: const InputDecoration(                      enabledBorder: OutlineInputBorder(                          borderSide: BorderSide(                            color: Colors.white,                            width: 0.5,                          )                      ),                      focusedBorder: OutlineInputBorder(                          borderSide: BorderSide(                            color: Colors.white,                            width: 1.5,                          )                      ),                    hintText: "Email",                    hintStyle: TextStyle(color: Colors.white),                  ),                  cursorColor: Colors.white,                  style:const TextStyle(color: Colors.white),                ),                //Age                TextField(                  controller: ageController,                  keyboardType: TextInputType.number,                  decoration: const InputDecoration(                    enabledBorder: OutlineInputBorder(                        borderSide: BorderSide(                          color: Colors.white,                          width: 0.5,                        )                    ),                    focusedBorder: OutlineInputBorder(                        borderSide: BorderSide(                          color: Colors.white,                          width: 1.5,                        )                    ),                    hintText: "Age",                    hintStyle: TextStyle(color: Colors.white),                  ),                  cursorColor: Colors.white,                  style:const TextStyle(color: Colors.white),                ),                const SizedBox(height: 50,),                StreamBuilder(                    stream:firebase.collection('users').orderBy('age', descending: false).where('age',whereNotIn: [15,17,22,23]).snapshots(),                    builder: (context, snapshot){                      if(snapshot.connectionState == ConnectionState.waiting){                        return const CircularProgressIndicator(color: Colors.black,);                      }else if(snapshot.hasError){                        return Center(                          child: Text(snapshot.error.toString()),                        );                      }else if(snapshot.connectionState == ConnectionState.active && snapshot.hasData){                        return ListView.builder(                            shrinkWrap: true,                            primary: false,                            itemCount: snapshot.data!.docs.length,                            itemBuilder: (context, index){                              Map<String, dynamic> data = snapshot.data!.docs[index].data();                              return ListTile(                                title: Text(data['name'] +" "+ data['age'].toString()),                                subtitle: Text(data['email']),                                trailing: IconButton(                                  icon: Icon(Icons.delete),                                  onPressed: ()async{                                    await FirebaseFirestore.instance.collection('users').doc(snapshot.data!.docs[index].id.toString()).delete();                                    deleteUser(index);                                  },                                ),                              );                            },                          );                      }else{                        return const CircularProgressIndicator(color: Colors.red,);                      }                    },                ),                const SizedBox(height: 30,),                ElevatedButton(onPressed:(){                  sendData();                }, child: Text("Send OTP",style: TextStyle(color: Colors.black),)),                const SizedBox(height: 30,),              ],            ),          )),    );  }  void sendData(){    String name = nameController.text.trim();    String email = emailController.text.trim();    String strAge = ageController.text.toString().trim();    int age = int.parse(strAge);    if(name!=null && email!=null){      firebase.collection('users').add({        "age": age,        "name":name,        "email":email      });    }  }  void deleteUser(int index){  }  void sendOTP(String mobile)async{    setState(()=> isSendOtpClicked = true);    FirebaseAuth.instance.verifyPhoneNumber(        phoneNumber: mobile,        codeSent: (verificationid,resendToken){          log('Code Sent $verificationid');          setState(()=> isSendOtpClicked = false);          Navigator.push(context, MaterialPageRoute(builder: (context)=> UserPage(verificationID: verificationid)));        },        verificationCompleted: (phoneAuthCredential) {          log(phoneAuthCredential.smsCode.toString());        },        verificationFailed: (error) {          log(error.code.toString());        },        codeAutoRetrievalTimeout: (verificationId) {        },        timeout: const Duration(seconds: 10)    );  }}